---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: readarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: synology-csi-driver
      namespace: storage
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      readarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: readarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/elfhosted/readarr-develop
              tag: 0.4.6.2711
            env:
              READARR__INSTANCE_NAME: Readarr
              READARR__LOG_LEVEL: info
              READARR__APP__THEME: dark
              READARR__AUTH__METHOD: External
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
              TZ: ${CONFIG_TIMEZONE}
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 8787
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 200m
                memory: 300Mi
              limits:
                memory: 500Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: readarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Readarr"
          gethomepage.dev/group: "Downloads"
          gethomepage.dev/description: "Book Collection Manager"
          gethomepage.dev/href: "https://readarr.${SECRET_DOMAIN}"
          gethomepage.dev/icon: "sh-readarr"
          gethomepage.dev/widget.type: "readarr"
          gethomepage.dev/widget.url: "https://readarr.${SECRET_DOMAIN}"
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_READARR_TOKEN}}`}}"
          gethomepage.dev/widget.enableQueue: "true"
        hosts:
          - host: readarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: readarr
      media:
        type: nfs
        server: ${SECRET_NFS_SERVER}
        path: /volume1/Media
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir
